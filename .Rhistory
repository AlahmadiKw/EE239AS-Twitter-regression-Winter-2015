dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs)
View(dat)
View(dat)
df <- data.frame(twt_count = dat$twt_count,
hw = dat$hr,
flwrs_count = dat$flwrs_count,
ret_cnt = dat$ret_cnt,
max_flwrs = dat$max_flwrs)
df <- melt(df ,  id = 'twt_count', variable_name = 'series')
# plot on same grid, each series colored differently --
# good if the series have same scale
ggplot(df, aes(twt_count,value)) + geom_line(aes(colour = series))
###############################################
df <- data.frame(twt_count = dat$twt_count,
hw = dat$hr,
flwrs_count = dat$flwrs_cnt,
ret_cnt = dat$ret_cnt,
max_flwrs = dat$max_flwrs)
df <- melt(df ,  id = 'twt_count', variable_name = 'series')
# plot on same grid, each series colored differently --
# good if the series have same scale
ggplot(df, aes(twt_count,value)) + geom_line(aes(colour = series))
df <- data.frame(twt_count = dat$twt_count,
hw = dat$hr,
flwrs_count = dat$flwrs_cnt,
ret_cnt = dat$ret_cnt,
max_flwrs = dat$max_flwrs)
df <- melt(df ,  id = 'twt_count', variable_name = 'series')
# plot on same grid, each series colored differently --
# good if the series have same scale
ggplot(df, aes(twt_count,value)) + geom_line(aes(colour = series))
###############################################
df <- data.frame(time = dat$twt_count,
hw = dat$hr,
flwrs_count = dat$flwrs_cnt,
ret_cnt = dat$ret_cnt,
max_flwrs = dat$max_flwrs)
df <- melt(df ,  id = 'time', variable_name = 'series')
# plot on same grid, each series colored differently --
# good if the series have same scale
ggplot(df, aes(time,value)) + geom_line(aes(colour = series))
###############################################
df <- data.frame(time = dat$twt_count,
hw = dat$hr,
flwrs_count = dat$flwrs_cnt,
ret_cnt = dat$ret_cnt,
max_flwrs = dat$max_flwrs)
df <- melt(df ,  id = 'time', variable_name = 'series')
# plot on same grid, each series colored differently --
# good if the series have same scale
ggplot(df, aes(time,value)) + geom_line(aes(colour = series))
##########################
# Regression Analysis for Tweets
#
# Author: Mohammad Mohammad
# Created on Jul 9 2014
# Last revision:
##########################
require(ggplot2)
require(reshape)
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs)
# plot scatter
plot(dat, hw, twt_count, type="p", lwd=1, col="black", pch=20,
main="linear regression model", ylab="estimated cost", xlab="distanct to closest fiber",
yaxt="n")
##########################
# Regression Analysis for Tweets
#
# Author: Mohammad Mohammad
# Created on Jul 9 2014
# Last revision:
##########################
require(ggplot2)
require(reshape)
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs)
# plot scatter
plot(hw, twt_count, data, type="p", lwd=1, col="black", pch=20,
main="linear regression model", ylab="estimated cost", xlab="distanct to closest fiber",
yaxt="n")
methods(plot)
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs)
# plot scatter
plot.data.frame(dat, hw, twt_count, type="p", lwd=1, col="black", pch=20,
main="linear regression model", ylab="estimated cost", xlab="distanct to closest fiber",
yaxt="n")
plot.data.frame(dat$hw, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="linear regression model", ylab="estimated cost", xlab="distanct to closest fiber",
yaxt="n")
# plot scatter
plot(dat$hw, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="linear regression model", ylab="estimated cost", xlab="distanct to closest fiber",
yaxt="n")
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs)
# plot scatter
plot(dat$hw, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="linear regression model", ylab="twt_count", xlab="hw",
yaxt="n")
# plot scatter
plot(dat$flwrs_cnt, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="linear regression model", ylab="twt_count", xlab="hw",
yaxt="n")
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs)
# plot scatter
plot(dat$flwr_cnt, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="linear regression model", ylab="twt_count", xlab="hw",
yaxt="n")
dat <- dat[ which(dat$flwr_cnt<1e8), ]
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs)
# remove outliers
dat <- dat[ which(dat$flwr_cnt<1e8), ]
# plot scatter
plot(dat$flwr_cnt, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="linear regression model", ylab="twt_count", xlab="hw",
yaxt="n")
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs)
# remove outliers
dat <- dat[ which(dat$flwr_cnt<1e8), ]
# plot scatter
plot(dat$flwr_cnt, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over the number of Followers", ylab="twt_count", xlab="flwrs_count",
yaxt="n")
plot(dat$hw, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over the number of Followers", ylab="twt_count", xlab="flwrs_count",
yaxt="n")
plot(dat$hw, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over 24 hrs", ylab="twt_count", xlab="hours",
yaxt="n")
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
View(dat)
View(dat)
plot(hours, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over 24 hrs", ylab="twt_count", xlab="hours",
yaxt="n")
hours <- dat$hr
plot(hours, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over 24 hrs", ylab="twt_count", xlab="hours",
yaxt="n")
plot(dat$hw, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over 24 hrs", ylab="twt_count", xlab="hours",
yaxt="n")
plot(dat$hw, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over 24 hrs", ylab="twt_count", xlab="hours",
yaxt="n")
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
hours <- dat$hr
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs)
# remove outliers
dat <- dat[ which(dat$flwr_cnt<1e8), ]
# plot scatter
plot(dat$flwr_cnt, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over the number of Followers", ylab="twt_count", xlab="flwrs_count",
yaxt="n")
plot(dat$hw, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over 24 hrs", ylab="twt_count", xlab="hours",
yaxt="n")
##########################
# Regression Analysis for Tweets
#
# Author: Mohammad Mohammad
# Created on Jul 9 2014
# Last revision:
##########################
require(ggplot2)
require(reshape)
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
hours <- dat$hr
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs)
# remove outliers
dat <- dat[ which(dat$flwr_cnt<1e8), ]
# plot scatter
plot(dat$flwr_cnt, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over the number of Followers", ylab="twt_count", xlab="flwrs_count",
yaxt="n")
par(mfrow=c(1,1))
plot(dat$hw, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over 24 hrs", ylab="twt_count", xlab="hours",
yaxt="n")
axis(1, at=hours,labels=hours, col.axis="red", las=2)
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
hours <- dat$hr
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs)
# remove outliers
dat <- dat[ which(dat$flwr_cnt<1e8), ]
# plot scatter
plot(dat$flwr_cnt, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over the number of Followers", ylab="twt_count", xlab="flwrs_count",
yaxt="n")
par(mfrow=c(1,1))
plot(dat$hw, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over 24 hrs", ylab="twt_count", xlab="hours",
yaxt="n")
axis(1, at=hours,labels=hours, col.axis="red", las=1)
plot(dat$hw, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over 24 hrs", ylab="twt_count", xlab="hours",
yaxt="n")
plot(dat$ret_cnt, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over 24 hrs", ylab="twt_count", xlab="hours",
yaxt="n")
plot(dat$ret_cnt, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over retweet sum", ylab="twt_count", xlab="total_retweets",
yaxt="n")
plot(dat$max_flwrs, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over retweet sum", ylab="twt_count", xlab="total_retweets",
yaxt="n")
plot(dat$max_flwrs, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over maximum followers", ylab="twt_count", xlab="max_followers",
yaxt="n")
plot(dat$hw, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over 24 hrs", ylab="twt_count", xlab="hours",
yaxt="n")
# create predictor
fit1 <- lm(twt_count ~ hw + flwr_cnt + ret_cnt + max_flwrs, dat)  # 1st order linear model
summary(fit)
# create predictor
fit <- lm(twt_count ~ hw + flwr_cnt + ret_cnt + max_flwrs, dat)  # 1st order linear model
summary(fit)
fit <- lm(twt_count ~ hours + flwr_cnt + ret_cnt + max_flwrs, dat)  # 1st order linear model
View(dat)
View(dat)
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
hours <- dat$hr
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs, hours = dat$hr)
# assign hr as factors
dat$hw <- as.factor(dat$hw)
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
hours <- dat$hr
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs, hours = dat$hr)
# assign hr as factors
dat$hw <- as.factor(dat$hw)
View(dat)
View(dat)
levels(dat)
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
hours <- dat$hr
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs, hours = dat$hr)
# assign hr as factors
dat$hw <- as.factor(dat$hours)
View(dat)
View(dat)
View(dat)
View(dat)
levels(dat)
levels(dat$hours)
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
hours <- dat$hr
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs, hours = dat$hr)
# assign hr as factors
dat$hours <- as.factor(dat$hours)
levels(dat$hours)
levels(dat)
dcast(dat, Name~hours)
library(reshape2)
install.packages('library(reshape2)')
install.packages('reshape2')
install.packages("reshape2")
require(ggplot2)
require(reshape)
require(reshape2)
dcast(dat, Name~hours)
##########################
# Regression Analysis for Tweets
#
# Author: Mohammad Mohammad
# Created on Jul 9 2014
# Last revision:
##########################
require(ggplot2)
require(reshape)
require(reshape2)
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
hours <- dat$hr
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs, hours = dat$hr)
# assign hr as factors
dat$hours <- as.factor(dat$hours)
dcast(dat, Name~hours)
aggregate(dat, by=dat$hours)
aggregate(hours ~
twt_count + flwr_cnt + ret_cnt + max_flwrs + hours,
sum,
data = dat)
aggregate(hours ~
twt_count + flwr_cnt + ret_cnt + max_flwrs + hours,
mean,
data = dat)
##########################
# Regression Analysis for Tweets
#
# Author: Mohammad Mohammad
# Created on Jul 9 2014
# Last revision:
##########################
require(ggplot2)
require(reshape)
require(reshape2)
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
hours <- dat$hr
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs, hours = dat$hr)
# assign hr as factors
dat$hours <- as.factor(dat$hours)
# remove outliers
dat <- dat[ which(dat$flwr_cnt<1e8), ]
aggregate(hours ~
twt_count + flwr_cnt + ret_cnt + max_flwrs + hours,
mean,
data = dat)
##########################
# Regression Analysis for Tweets
#
# Author: Mohammad Mohammad
# Created on Jul 9 2014
# Last revision:
##########################
require(ggplot2)
require(reshape)
require(reshape2)
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
hours <- dat$hr
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs, hours = dat$hr)
# assign hr as factors
# dat$hours <- as.factor(dat$hours)
# remove outliers
dat <- dat[ which(dat$flwr_cnt<1e8), ]
aggregate(hours ~
twt_count + flwr_cnt + ret_cnt + max_flwrs + hours,
mean,
data = dat)
View(dat)
View(dat)
aggregate(. ~ hours,
mean,
data = dat)
##########################
# Regression Analysis for Tweets
#
# Author: Mohammad Mohammad
# Created on Jul 9 2014
# Last revision:
##########################
require(ggplot2)
require(reshape)
require(reshape2)
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
hours <- dat$hr
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs, hours = dat$hr)
# assign hr as factors
# dat$hours <- as.factor(dat$hours)
# remove outliers
dat <- dat[ which(dat$flwr_cnt<1e8), ]
dat <- aggregate(. ~ hours,
mean,
data = dat)
View(dat)
View(dat)
# plot scatter
plot(dat$flwr_cnt, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over the number of Followers", ylab="twt_count", xlab="flwrs_count",
yaxt="n")
plot(dat$hw, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over 24 hrs", ylab="twt_count", xlab="hours",
yaxt="n")
plot(dat$hours, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over 24 hrs", ylab="twt_count", xlab="hours",
yaxt="n")
plot(dat$ret_cnt, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over retweet sum", ylab="twt_count", xlab="total_retweets",
yaxt="n")
plot(dat$max_flwrs, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over maximum followers", ylab="twt_count", xlab="max_followers",
yaxt="n")
# create predictor
fit <- lm(twt_count ~ hours + flwr_cnt + ret_cnt + max_flwrs, dat)  # 1st order linear model
summary(fit)
# dat$hours <- as.factor(dat$hours)
##########################
# Regression Analysis for Tweets
#
# Author: Mohammad Mohammad
# Created on Jul 9 2014
# Last revision:
##########################
rm(list=ls())
# import csv data
dat <- read.table("statistics_#NFL.csv", header=TRUE, sep=',')
# sort by hours (24 hours)
dat <- dat[order(dat$from),]
hours <- dat$hr
# remove unnessesarry columns
dat <- data.frame(twt_count = dat$twt_count, hw = dat$from, flwr_cnt = dat$flwrs_count, ret_cnt = dat$ret_cnt, max_flwrs = dat$max_flwrs, hours = dat$hr)
# assign hr as factors
# dat$hours <- as.factor(dat$hours)
# remove outliers
dat <- dat[ which(dat$flwr_cnt<1e8), ]
dat <- aggregate(. ~ hours,
mean,
data = dat)
# plot scatter
plot(dat$flwr_cnt, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over the number of Followers", ylab="twt_count", xlab="flwrs_count",
yaxt="n")
plot(dat$hours, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over 24 hrs", ylab="twt_count", xlab="hours",
yaxt="n")
plot(dat$ret_cnt, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over retweet sum", ylab="twt_count", xlab="total_retweets",
yaxt="n")
plot(dat$max_flwrs, dat$twt_count, type="p", lwd=1, col="black", pch=20,
main="Tweet Count over maximum followers", ylab="twt_count", xlab="max_followers",
yaxt="n")
# create predictor
fit <- lm(twt_count ~ hours + flwr_cnt + ret_cnt + max_flwrs, dat)  # 1st order linear model
summary(fit)
